#!/usr/bin/env python

import argparse
import os
import sys

import georeg

parser = argparse.ArgumentParser(description="process and geocode business registries")

parser.add_argument(
    "--year", "-y", type=int, required=True, help="""
        The year of the registry.""")
parser.add_argument(
    "--images", "-i", required=True, nargs='+', help="""
        Images to process.""")
parser.add_argument(
    "--append", action="store_true", help="""
        Append to the output file instead of overwriting it.""")
parser.add_argument(
    "--debug", action="store_true", help="""
        Draw images showing intermediate output during processing.""")
parser.add_argument(
    "--pre-processed", action="store_true", help="""
        Assume images have been preprocessed by scan-tailor.""")
parser.add_argument(
    "--outdir", "-o", required=True, help="""
        Path to the directory to write out results.""")
parser.add_argument(
    "--state", "-s", default="", required=True, help="""
        US state to get city list.""")

args = parser.parse_args()

# import registry processor based on year
if args.state == 'RI':
    if args.year >= 1975:
        from georeg.registry_processor_ri import RegistryProcessorNew as RegistryProcessor
    else:
        from georeg.registry_processor_ri import RegistryProcessorOld as RegistryProcessor
elif args.state == 'TX':
    if args.year == 1990:
        from georeg.registry_processor_tx import RegistryProcessor1990 as RegistryProcessor
    elif args.year == 1995:
        from georeg.registry_processor_tx import RegistryProcessor1995 as RegistryProcessor
    elif args.year == 1999:
        from georeg.registry_processor_tx import RegistryProcessor1999 as RegistryProcessor
    elif args.year == 1975:
        from georeg.registry_processor_tx import RegistryProcessor1975 as RegistryProcessor
    elif args.year == 2005:
        from georeg.registry_processor_tx import RegistryProcessor2005 as RegistryProcessor
    else:
        raise ValueError("%d is not a supported year for TX" % (args.year,))

else:
    raise ValueError("%s is not a supported state" % (args.state,))

reg_processor = RegistryProcessor(args.state, args.year)

reg_processor.draw_debug_images = args.debug
reg_processor.assume_pre_processed = args.pre_processed

if args.append:
    mode = 'a'
else:
    mode = 'w'

outname = "%s/%d-compiled.tsv" % (args.outdir, args.year)

for image in args.images:
    print >>sys.stderr, "processing:", image
    reg_processor.process_image(image)
    reg_processor.record_to_tsv(outname, mode)
    if mode == 'w': mode = 'a'

print('\a')  #makes a noise at the end of the script.  May only work on Mac
print >>sys.stderr, "done"
